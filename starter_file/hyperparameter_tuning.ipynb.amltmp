{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Hyperparameter Tuning using HyperDrive\n",
        "\n",
        "TODO: Import Dependencies. In the cell below, import all the dependencies that you will need to complete the project."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.widgets import RunDetails\n",
        "from azureml.core import Workspace, Experiment\n",
        "from azureml.core.compute import ComputeTarget, AmlCompute\n",
        "from azureml.core.compute_target import ComputeTargetException\n",
        "from azureml.train.sklearn import SKLearn\n",
        "from azureml.train.hyperdrive.run import PrimaryMetricGoal\n",
        "from azureml.train.hyperdrive.policy import BanditPolicy\n",
        "from azureml.train.hyperdrive.sampling import RandomParameterSampling\n",
        "from azureml.train.hyperdrive.runconfig import HyperDriveConfig\n",
        "from azureml.train.hyperdrive.parameter_expressions import choice, uniform\n",
        "from azureml.core import Environment, ScriptRunConfig\n",
        "from azureml.data.dataset_factory import TabularDatasetFactory\n",
        "from azureml.core.model import Model\n",
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from sklearn.preprocessing import MinMaxScaler, OrdinalEncoder\n",
        "from sklearn.metrics import mean_squared_error\n",
        "\n",
        "import os\n",
        "import pandas as pd\n",
        "import numpy as np"
      ],
      "outputs": [],
      "execution_count": 72,
      "metadata": {
        "gather": {
          "logged": 1667768832717
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Dataset\n",
        "\n",
        "TODO: Get data. In the cell below, write code to access the data you will be using in this project. Remember that the dataset needs to be external."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "ws = Workspace.from_config()\n",
        "experiment_name = 'udacity-capstone-hyperdrive'\n",
        "\n",
        "experiment=Experiment(ws, experiment_name)"
      ],
      "outputs": [],
      "execution_count": 2,
      "metadata": {
        "gather": {
          "logged": 1667760936184
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        " # datastore for AutoML\n",
        "ds = ws.get_default_datastore()\n",
        "spotify_data = TabularDatasetFactory.from_delimited_files(path=ds.path('spotify_exp/songs_normalize.csv'))\n",
        "\n",
        "df = spotify_data.to_pandas_dataframe()\n",
        "df.shape"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 31,
          "data": {
            "text/plain": "(2000, 18)"
          },
          "metadata": {}
        }
      ],
      "execution_count": 31,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1667762199549
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Hyperdrive Configuration\n",
        "\n",
        "TODO: Explain the model you are using and the reason for chosing the different hyperparameters, termination policy and config settings.\n",
        "\n",
        "The model I will be using is a RandomForestRegressor. I chose to use this model because ensemble learning methods leverage multiple learners and can lead to better results. For the hyperparameter selection I chose to test different values for the number of estimators, depth of each tree, and the maximum number of features. I chose larger values for the number of estimators to take advantage of the benefits of ensemble learning. For the depth, I did not want to choose too large of a value as this could worsen performance. The feature set is very large given the encoding of the artist and genre columns, so I wanted to experiment with different values for maximum features. Using all of them could be overkill as the data is very sparse. \n",
        "\n",
        "I chose to use the BanditPolicy for early termination. Based on the provided slack criteria, runs that don't fall within this criteria will be terminated. Using this policy will allow us to focus on the best performing runs, and eliminate those that would report poorly if they were allowed to complete.\n",
        "\n",
        "For other configs, I set the maximum number of runs to 20 to avoid longer training times."
      ],
      "metadata": {
        "collapsed": true,
        "gather": {
          "logged": 1598531923519
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.compute import AmlCompute\n",
        "from azureml.core.compute import ComputeTarget\n",
        "from azureml.core.compute_target import ComputeTargetException\n",
        "\n",
        "amlcompute_cluster_name = \"hyperdrive-ml\"\n",
        "\n",
        "# Verify that cluster does not exist already\n",
        "try:\n",
        "    compute_target = ComputeTarget(workspace=ws, name=amlcompute_cluster_name)\n",
        "    print('Found existing cluster, use it.')\n",
        "except ComputeTargetException:\n",
        "    compute_config = AmlCompute.provisioning_configuration(vm_size='Standard_DS3_v2',# for GPU, use \"STANDARD_NC6\"\n",
        "                                                           #vm_priority = 'lowpriority', # optional\n",
        "                                                           max_nodes=4)\n",
        "    compute_target = ComputeTarget.create(ws, amlcompute_cluster_name, compute_config)\n",
        "\n",
        "compute_target.wait_for_completion(show_output=True, min_node_count = 1, timeout_in_minutes = 5)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "InProgress.\nSucceededProvisioning operation finished, operation \"Succeeded\"\nSucceeded...........................................................\nAmlCompute wait for completion finished\n\nWait timeout has been reached\nCurrent provisioning state of AmlCompute is \"Succeeded\" and current node count is \"0\"\n"
        }
      ],
      "execution_count": 53,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1667764764565
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# TODO: Create an early termination policy. This is not required if you are using Bayesian sampling.\n",
        "early_termination_policy = BanditPolicy(evaluation_interval=2, slack_factor=0.1)\n",
        "\n",
        "#TODO: Create the different params that you will be using during training\n",
        "param_sampling = RandomParameterSampling(\n",
        "    {\n",
        "        '--n_estimators' : choice(100,200,300),\n",
        "        '--max_depth': choice(5,10,15),\n",
        "        '--max_features': choice('sqrt', 'log2')\n",
        "    }\n",
        ")\n",
        "\n",
        "# Setup environment for your training run\n",
        "sklearn_env = Environment.from_conda_specification(name='sklearn-env', file_path='conda_dependencies.yml')\n",
        "\n",
        "# Create a ScriptRunConfig Object to specify the configuration details of your training job\n",
        "src = ScriptRunConfig(source_directory=\"./\",\n",
        "                    script=\"train.py\",\n",
        "                    compute_target=compute_target,\n",
        "                    environment=sklearn_env)\n",
        "\n",
        "# Create a HyperDriveConfig using the src object, hyperparameter sampler, and policy.\n",
        "hyperdrive_config = HyperDriveConfig(run_config=src,\n",
        "                                    hyperparameter_sampling=param_sampling,\n",
        "                                    policy=early_termination_policy,\n",
        "                                    primary_metric_name=\"RMSE\",\n",
        "                                    primary_metric_goal=PrimaryMetricGoal.MAXIMIZE,\n",
        "                                    max_total_runs=20,\n",
        "                                    max_concurrent_runs=4,\n",
        "                                    max_duration_minutes=20\n",
        "                                    )"
      ],
      "outputs": [],
      "execution_count": 58,
      "metadata": {
        "gather": {
          "logged": 1667767255331
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#TODO: Submit your experiment\n",
        "hyperdrive_run = experiment.submit(hyperdrive_config)\n",
        "hyperdrive_run.wait_for_completion(show_output=True)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "RunId: HD_1373d39b-515c-43d5-8e1d-c84355492d37\nWeb View: https://ml.azure.com/runs/HD_1373d39b-515c-43d5-8e1d-c84355492d37?wsid=/subscriptions/6b66a03f-9834-4d5b-92f6-b82e733674dc/resourcegroups/azuremleast/workspaces/capstone&tid=a1ab4d21-4797-4645-90e8-98fbc87b1b92\n\nStreaming azureml-logs/hyperdrive.txt\n=====================================\n\n[2022-11-06T20:41:00.867193][GENERATOR][INFO]Trying to sample '4' jobs from the hyperparameter space\n[2022-11-06T20:41:01.5781994Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_0' \n[2022-11-06T20:41:01.6861095Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_1' \n[2022-11-06T20:41:01.8017542Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_2' \n[2022-11-06T20:41:01.8788922Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_3' \n[2022-11-06T20:41:01.812070][GENERATOR][INFO]Successfully sampled '4' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:41:01.9634848Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_2' \n[2022-11-06T20:41:01.9748553Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_0' \n[2022-11-06T20:41:01.9978663Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_1' \n[2022-11-06T20:41:02.0299277Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_3' \n[2022-11-06T20:41:31.538180][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\n[2022-11-06T20:41:31.776397][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:41:31.8520320Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_4' \n[2022-11-06T20:41:32.0426081Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_4' \n[2022-11-06T20:42:31.242898][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\n[2022-11-06T20:42:31.503418][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:42:31.5576895Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_5' \n[2022-11-06T20:42:31.8664463Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_5' \n[2022-11-06T20:43:01.225065][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\n[2022-11-06T20:43:01.4815901Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_6' \n[2022-11-06T20:43:01.555104][GENERATOR][INFO]Successfully sampled '2' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:43:01.6060157Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_7' \n[2022-11-06T20:43:01.6642162Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_6' \n[2022-11-06T20:43:01.8245509Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_7' \n[2022-11-06T20:43:31.210871][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\n[2022-11-06T20:43:31.5672236Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_8' \n[2022-11-06T20:43:31.528297][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:43:31.8035043Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_8' \n[2022-11-06T20:44:01.961662][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\n[2022-11-06T20:44:02.148013][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:44:02.2330889Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_9' \n[2022-11-06T20:44:02.4430929Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_9' \n[2022-11-06T20:44:31.176923][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\n[2022-11-06T20:44:31.4214514Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_10' \n[2022-11-06T20:44:31.442113][GENERATOR][INFO]Successfully sampled '2' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:44:31.4860858Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_11' \n[2022-11-06T20:44:31.6001156Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_10' \n[2022-11-06T20:44:32.1289801Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_11' \n[2022-11-06T20:45:01.163647][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\n[2022-11-06T20:45:01.4612197Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_12' \n[2022-11-06T20:45:01.417546][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:45:01.7021719Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_12' \n[2022-11-06T20:45:31.168487][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\n[2022-11-06T20:45:31.5106634Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_13' \n[2022-11-06T20:45:31.482806][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:45:31.6639951Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_13' \n[2022-11-06T20:46:01.170875][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\n[2022-11-06T20:46:01.5293606Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_14' \n[2022-11-06T20:46:01.609034][GENERATOR][INFO]Successfully sampled '2' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:46:01.6567214Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_15' \n[2022-11-06T20:46:01.7564274Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_14' \n[2022-11-06T20:46:01.8196058Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_15' \n[2022-11-06T20:46:31.263276][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\n[2022-11-06T20:46:31.484909][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:46:31.5284096Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_16' \n[2022-11-06T20:46:31.7697764Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_16' \n[2022-11-06T20:47:01.202637][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\n[2022-11-06T20:47:01.5188507Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_17' \n[2022-11-06T20:47:01.487696][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\n[2022-11-06T20:47:01.8021964Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_17' \n[2022-11-06T20:47:31.184499][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\n[2022-11-06T20:47:31.205492][GENERATOR][WARNING]Could not sample any more jobs from the space.\n[2022-11-06T20:49:03.285083][CONTROLLER][INFO]Experiment was 'ExperimentStatus.RUNNING', is 'ExperimentStatus.FINISHED'.\n\nExecution Summary\n=================\nRunId: HD_1373d39b-515c-43d5-8e1d-c84355492d37\nWeb View: https://ml.azure.com/runs/HD_1373d39b-515c-43d5-8e1d-c84355492d37?wsid=/subscriptions/6b66a03f-9834-4d5b-92f6-b82e733674dc/resourcegroups/azuremleast/workspaces/capstone&tid=a1ab4d21-4797-4645-90e8-98fbc87b1b92\n\n"
        },
        {
          "output_type": "execute_result",
          "execution_count": 59,
          "data": {
            "text/plain": "{'runId': 'HD_1373d39b-515c-43d5-8e1d-c84355492d37',\n 'target': 'hyperdrive-ml',\n 'status': 'Completed',\n 'startTimeUtc': '2022-11-06T20:41:00.306119Z',\n 'endTimeUtc': '2022-11-06T20:49:03.103399Z',\n 'services': {},\n 'properties': {'primary_metric_config': '{\"name\":\"RMSE\",\"goal\":\"maximize\"}',\n  'resume_from': 'null',\n  'runTemplate': 'HyperDrive',\n  'azureml.runsource': 'hyperdrive',\n  'platform': 'AML',\n  'ContentSnapshotId': '8cb4539b-849f-4a7a-b0b7-1912b3b80031',\n  'user_agent': 'python/3.8.5 (Linux-5.15.0-1017-azure-x86_64-with-glibc2.10) msrest/0.7.1 Hyperdrive.Service/1.0.0 Hyperdrive.SDK/core.1.44.0',\n  'space_size': '18',\n  'score': '20.54285870518348',\n  'best_child_run_id': 'HD_1373d39b-515c-43d5-8e1d-c84355492d37_10',\n  'best_metric_status': 'Succeeded',\n  'best_data_container_id': 'dcid.HD_1373d39b-515c-43d5-8e1d-c84355492d37_10'},\n 'inputDatasets': [],\n 'outputDatasets': [],\n 'runDefinition': {'configuration': None,\n  'attribution': None,\n  'telemetryValues': {'amlClientType': 'azureml-sdk-train',\n   'amlClientModule': '[Scrubbed]',\n   'amlClientFunction': '[Scrubbed]',\n   'tenantId': 'a1ab4d21-4797-4645-90e8-98fbc87b1b92',\n   'amlClientRequestId': '4003d40c-e9ad-46f4-b403-854cb1992695',\n   'amlClientSessionId': '03d188d5-0e26-4fdc-ac2d-54b3860c0b6d',\n   'subscriptionId': '6b66a03f-9834-4d5b-92f6-b82e733674dc',\n   'estimator': 'NoneType',\n   'samplingMethod': 'RANDOM',\n   'terminationPolicy': 'Bandit',\n   'primaryMetricGoal': 'maximize',\n   'maxTotalRuns': 20,\n   'maxConcurrentRuns': 4,\n   'maxDurationMinutes': 20,\n   'vmSize': None},\n  'snapshotId': '8cb4539b-849f-4a7a-b0b7-1912b3b80031',\n  'snapshots': [],\n  'sourceCodeDataReference': None,\n  'parentRunId': None,\n  'dataContainerId': None,\n  'runType': None,\n  'displayName': None,\n  'environmentAssetId': None,\n  'properties': {},\n  'tags': {},\n  'aggregatedArtifactPath': None},\n 'logFiles': {'azureml-logs/hyperdrive.txt': 'https://capstone3868890531.blob.core.windows.net/azureml/ExperimentRun/dcid.HD_1373d39b-515c-43d5-8e1d-c84355492d37/azureml-logs/hyperdrive.txt?sv=2019-07-07&sr=b&sig=CXsestVqisPq4BDnjiL4jnAE%2FkWFw6L8cU8d%2B8h89jw%3D&skoid=2120a6cf-0908-44bd-9d70-1a9fd4eb26e8&sktid=a1ab4d21-4797-4645-90e8-98fbc87b1b92&skt=2022-11-06T20%3A05%3A02Z&ske=2022-11-08T04%3A15%3A02Z&sks=b&skv=2019-07-07&st=2022-11-06T20%3A39%3A25Z&se=2022-11-07T04%3A49%3A25Z&sp=r'},\n 'submittedBy': 'travis m'}"
          },
          "metadata": {}
        }
      ],
      "execution_count": 59,
      "metadata": {
        "gather": {
          "logged": 1667767766668
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Run Details\n",
        "\n",
        "OPTIONAL: Write about the different models trained and their performance. Why do you think some models did better than others?\n",
        "\n",
        "TODO: In the cell below, use the `RunDetails` widget to show the different experiments."
      ],
      "metadata": {
        "collapsed": true,
        "gather": {
          "logged": 1598544898497
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "RunDetails(hyperdrive_run).show()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "_HyperDriveWidget(widget_settings={'childWidgetDisplay': 'popup', 'send_telemetry': False, 'log_level': 'INFO'…",
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "54f8bea96a1742bdb232eb6a9a06f478"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "application/aml.mini.widget.v1": "{\"status\": \"Completed\", \"workbench_run_details_uri\": \"https://ml.azure.com/runs/HD_1373d39b-515c-43d5-8e1d-c84355492d37?wsid=/subscriptions/6b66a03f-9834-4d5b-92f6-b82e733674dc/resourcegroups/azuremleast/workspaces/capstone&tid=a1ab4d21-4797-4645-90e8-98fbc87b1b92\", \"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37\", \"run_properties\": {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37\", \"created_utc\": \"2022-11-06T20:41:00.272046Z\", \"properties\": {\"primary_metric_config\": \"{\\\"name\\\":\\\"RMSE\\\",\\\"goal\\\":\\\"maximize\\\"}\", \"resume_from\": \"null\", \"runTemplate\": \"HyperDrive\", \"azureml.runsource\": \"hyperdrive\", \"platform\": \"AML\", \"ContentSnapshotId\": \"8cb4539b-849f-4a7a-b0b7-1912b3b80031\", \"user_agent\": \"python/3.8.5 (Linux-5.15.0-1017-azure-x86_64-with-glibc2.10) msrest/0.7.1 Hyperdrive.Service/1.0.0 Hyperdrive.SDK/core.1.44.0\", \"space_size\": \"18\", \"score\": \"20.54285870518348\", \"best_child_run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_10\", \"best_metric_status\": \"Succeeded\", \"best_data_container_id\": \"dcid.HD_1373d39b-515c-43d5-8e1d-c84355492d37_10\"}, \"tags\": {\"_aml_system_max_concurrent_jobs\": \"4\", \"_aml_system_max_total_jobs\": \"20\", \"_aml_system_max_duration_minutes\": \"20\", \"_aml_system_policy_config\": \"{\\\"name\\\":\\\"Bandit\\\",\\\"properties\\\":{\\\"evaluation_interval\\\":2,\\\"delay_evaluation\\\":0,\\\"slack_factor\\\":0.1}}\", \"_aml_system_generator_config\": \"{\\\"name\\\":\\\"RANDOM\\\",\\\"parameter_space\\\":{\\\"--n_estimators\\\":[\\\"choice\\\",[[100,200,300]]],\\\"--max_depth\\\":[\\\"choice\\\",[[5,10,15]]],\\\"--max_features\\\":[\\\"choice\\\",[[\\\"sqrt\\\",\\\"log2\\\"]]]},\\\"properties\\\":null}\", \"_aml_system_primary_metric_config\": \"{\\\"name\\\":\\\"RMSE\\\",\\\"goal\\\":\\\"maximize\\\"}\", \"_aml_system_platform_config\": \"{\\\"ServiceAddress\\\": \\\"https://eastus2.experiments.azureml.net\\\", \\\"SubscriptionId\\\": \\\"6b66a03f-9834-4d5b-92f6-b82e733674dc\\\", \\\"ResourceGroupName\\\": \\\"azuremleast\\\", \\\"WorkspaceName\\\": \\\"capstone\\\", \\\"ExperimentName\\\": \\\"udacity-capstone-hyperdrive\\\", \\\"Definition\\\": {\\\"Configuration\\\": null, \\\"Attribution\\\": null, \\\"TelemetryValues\\\": {\\\"amlClientType\\\": \\\"azureml-sdk-train\\\", \\\"amlClientModule\\\": \\\"[Scrubbed]\\\", \\\"amlClientFunction\\\": \\\"[Scrubbed]\\\", \\\"tenantId\\\": \\\"a1ab4d21-4797-4645-90e8-98fbc87b1b92\\\", \\\"amlClientRequestId\\\": \\\"4003d40c-e9ad-46f4-b403-854cb1992695\\\", \\\"amlClientSessionId\\\": \\\"03d188d5-0e26-4fdc-ac2d-54b3860c0b6d\\\", \\\"subscriptionId\\\": \\\"6b66a03f-9834-4d5b-92f6-b82e733674dc\\\", \\\"estimator\\\": \\\"NoneType\\\", \\\"samplingMethod\\\": \\\"RANDOM\\\", \\\"terminationPolicy\\\": \\\"Bandit\\\", \\\"primaryMetricGoal\\\": \\\"maximize\\\", \\\"maxTotalRuns\\\": 20, \\\"maxConcurrentRuns\\\": 4, \\\"maxDurationMinutes\\\": 20, \\\"vmSize\\\": null}, \\\"Overrides\\\": {\\\"Script\\\": \\\"train.py\\\", \\\"Command\\\": \\\"\\\", \\\"UseAbsolutePath\\\": false, \\\"Arguments\\\": [], \\\"SourceDirectoryDataStore\\\": null, \\\"Framework\\\": 0, \\\"Communicator\\\": 0, \\\"Target\\\": \\\"hyperdrive-ml\\\", \\\"DataReferences\\\": {}, \\\"Data\\\": {}, \\\"OutputData\\\": {}, \\\"Datacaches\\\": [], \\\"JobName\\\": null, \\\"MaxRunDurationSeconds\\\": 2592000, \\\"NodeCount\\\": 1, \\\"InstanceTypes\\\": [], \\\"Priority\\\": null, \\\"CredentialPassthrough\\\": false, \\\"Identity\\\": null, \\\"Environment\\\": {\\\"Name\\\": \\\"sklearn-env\\\", \\\"AutoRebuild\\\": true, \\\"Python\\\": {\\\"InterpreterPath\\\": \\\"python\\\", \\\"UserManagedDependencies\\\": false, \\\"CondaDependencies\\\": {\\\"dependencies\\\": [\\\"python=3.6.2\\\", \\\"scikit-learn\\\", \\\"numpy\\\", \\\"pandas\\\", {\\\"pip\\\": [\\\"azureml-defaults\\\"]}]}, \\\"BaseCondaEnvironment\\\": null}, \\\"EnvironmentVariables\\\": {\\\"EXAMPLE_ENV_VAR\\\": \\\"EXAMPLE_VALUE\\\"}, \\\"Docker\\\": {\\\"BaseImage\\\": \\\"mcr.microsoft.com/azureml/openmpi4.1.0-ubuntu20.04:20220708.v1\\\", \\\"Platform\\\": {\\\"Os\\\": \\\"Linux\\\", \\\"Architecture\\\": \\\"amd64\\\"}, \\\"BaseDockerfile\\\": null, \\\"BaseImageRegistry\\\": {\\\"Address\\\": null, \\\"Username\\\": null, \\\"Password\\\": null}, \\\"Enabled\\\": false, \\\"Arguments\\\": []}, \\\"Spark\\\": {\\\"Repositories\\\": [], \\\"Packages\\\": [], \\\"PrecachePackages\\\": true}, \\\"InferencingStackVersion\\\": null}, \\\"History\\\": {\\\"OutputCollection\\\": true, \\\"DirectoriesToWatch\\\": [\\\"logs\\\"], \\\"EnableMLflowTracking\\\": true, \\\"snapshotProject\\\": true}, \\\"Spark\\\": {\\\"Configuration\\\": {\\\"spark.app.name\\\": \\\"Azure ML Experiment\\\", \\\"spark.yarn.maxAppAttempts\\\": \\\"1\\\"}}, \\\"ParallelTask\\\": {\\\"MaxRetriesPerWorker\\\": 0, \\\"WorkerCountPerNode\\\": 1, \\\"TerminalExitCodes\\\": null, \\\"Configuration\\\": {}}, \\\"BatchAi\\\": {\\\"NodeCount\\\": 0}, \\\"AmlCompute\\\": {\\\"Name\\\": null, \\\"VmSize\\\": null, \\\"RetainCluster\\\": false, \\\"ClusterMaxNodeCount\\\": null}, \\\"AISuperComputer\\\": {\\\"InstanceType\\\": \\\"D2\\\", \\\"FrameworkImage\\\": null, \\\"ImageVersion\\\": \\\"pytorch-1.7.0\\\", \\\"Location\\\": null, \\\"AISuperComputerStorageData\\\": null, \\\"Interactive\\\": false, \\\"ScalePolicy\\\": null, \\\"VirtualClusterArmId\\\": null, \\\"TensorboardLogDirectory\\\": null, \\\"SSHPublicKey\\\": null, \\\"SSHPublicKeys\\\": null, \\\"EnableAzmlInt\\\": true, \\\"Priority\\\": \\\"Medium\\\", \\\"SLATier\\\": \\\"Standard\\\", \\\"UserAlias\\\": null}, \\\"KubernetesCompute\\\": {\\\"InstanceType\\\": null}, \\\"Tensorflow\\\": {\\\"WorkerCount\\\": 1, \\\"ParameterServerCount\\\": 1}, \\\"Mpi\\\": {\\\"ProcessCountPerNode\\\": 1}, \\\"PyTorch\\\": {\\\"CommunicationBackend\\\": \\\"nccl\\\", \\\"ProcessCount\\\": null}, \\\"Hdi\\\": {\\\"YarnDeployMode\\\": 2}, \\\"ContainerInstance\\\": {\\\"Region\\\": null, \\\"CpuCores\\\": 2.0, \\\"MemoryGb\\\": 3.5}, \\\"ExposedPorts\\\": null, \\\"Docker\\\": {\\\"UseDocker\\\": false, \\\"SharedVolumes\\\": true, \\\"ShmSize\\\": \\\"2g\\\", \\\"Arguments\\\": []}, \\\"Cmk8sCompute\\\": {\\\"Configuration\\\": {}}, \\\"CommandReturnCodeConfig\\\": {\\\"ReturnCode\\\": 0, \\\"SuccessfulReturnCodes\\\": []}, \\\"EnvironmentVariables\\\": {}, \\\"ApplicationEndpoints\\\": {}, \\\"Parameters\\\": []}, \\\"SnapshotId\\\": \\\"8cb4539b-849f-4a7a-b0b7-1912b3b80031\\\", \\\"Snapshots\\\": [], \\\"SourceCodeDataReference\\\": null, \\\"ParentRunId\\\": null, \\\"DataContainerId\\\": null, \\\"RunType\\\": null, \\\"DisplayName\\\": null, \\\"EnvironmentAssetId\\\": null, \\\"Properties\\\": {}, \\\"Tags\\\": {}, \\\"AggregatedArtifactPath\\\": null}, \\\"ParentRunId\\\": \\\"HD_1373d39b-515c-43d5-8e1d-c84355492d37\\\"}\", \"_aml_system_resume_child_runs\": \"null\", \"_aml_system_all_jobs_generated\": \"true\", \"_aml_system_cancellation_requested\": \"false\", \"_aml_system_progress_metadata_evaluation_timestamp\": \"\\\"2022-11-06T20:41:01.056627\\\"\", \"_aml_system_progress_metadata_digest\": \"\\\"6472378dd3faaf84f9e64ddada313ec90ea3c4ad3d9851f74b4592df77bd029d\\\"\", \"_aml_system_progress_metadata_active_timestamp\": \"\\\"2022-11-06T20:41:01.056627\\\"\", \"_aml_system_optimizer_state_artifact\": \"null\", \"_aml_system_outdated_optimizer_state_artifacts\": \"\\\"[]\\\"\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_0\": \"{\\\"--max_depth\\\": 5, \\\"--max_features\\\": \\\"log2\\\", \\\"--n_estimators\\\": 300}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_1\": \"{\\\"--max_depth\\\": 5, \\\"--max_features\\\": \\\"sqrt\\\", \\\"--n_estimators\\\": 200}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_2\": \"{\\\"--max_depth\\\": 15, \\\"--max_features\\\": \\\"log2\\\", \\\"--n_estimators\\\": 300}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_3\": \"{\\\"--max_depth\\\": 15, \\\"--max_features\\\": \\\"log2\\\", \\\"--n_estimators\\\": 200}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_4\": \"{\\\"--max_depth\\\": 10, \\\"--max_features\\\": \\\"sqrt\\\", \\\"--n_estimators\\\": 300}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_5\": \"{\\\"--max_depth\\\": 10, \\\"--max_features\\\": \\\"sqrt\\\", \\\"--n_estimators\\\": 100}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_6\": \"{\\\"--max_depth\\\": 15, \\\"--max_features\\\": \\\"sqrt\\\", \\\"--n_estimators\\\": 200}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_7\": \"{\\\"--max_depth\\\": 5, \\\"--max_features\\\": \\\"sqrt\\\", \\\"--n_estimators\\\": 300}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_8\": \"{\\\"--max_depth\\\": 5, \\\"--max_features\\\": \\\"log2\\\", \\\"--n_estimators\\\": 100}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_9\": \"{\\\"--max_depth\\\": 15, \\\"--max_features\\\": \\\"sqrt\\\", \\\"--n_estimators\\\": 100}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_10\": \"{\\\"--max_depth\\\": 5, \\\"--max_features\\\": \\\"log2\\\", \\\"--n_estimators\\\": 200}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_11\": \"{\\\"--max_depth\\\": 10, \\\"--max_features\\\": \\\"sqrt\\\", \\\"--n_estimators\\\": 200}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_12\": \"{\\\"--max_depth\\\": 15, \\\"--max_features\\\": \\\"sqrt\\\", \\\"--n_estimators\\\": 300}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_13\": \"{\\\"--max_depth\\\": 15, \\\"--max_features\\\": \\\"log2\\\", \\\"--n_estimators\\\": 100}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_14\": \"{\\\"--max_depth\\\": 10, \\\"--max_features\\\": \\\"log2\\\", \\\"--n_estimators\\\": 200}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_15\": \"{\\\"--max_depth\\\": 10, \\\"--max_features\\\": \\\"log2\\\", \\\"--n_estimators\\\": 300}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_16\": \"{\\\"--max_depth\\\": 5, \\\"--max_features\\\": \\\"sqrt\\\", \\\"--n_estimators\\\": 100}\", \"_aml_system_HD_1373d39b-515c-43d5-8e1d-c84355492d37_17\": \"{\\\"--max_depth\\\": 10, \\\"--max_features\\\": \\\"log2\\\", \\\"--n_estimators\\\": 100}\", \"_aml_system_final_best_metric_update_retry_count\": \"1\"}, \"script_name\": null, \"arguments\": null, \"end_time_utc\": \"2022-11-06T20:49:03.103399Z\", \"status\": \"Completed\", \"log_files\": {\"azureml-logs/hyperdrive.txt\": \"https://capstone3868890531.blob.core.windows.net/azureml/ExperimentRun/dcid.HD_1373d39b-515c-43d5-8e1d-c84355492d37/azureml-logs/hyperdrive.txt?sv=2019-07-07&sr=b&sig=UYqG4xSRjMULZjP1w8qHW38bSJJz99T9BMsSLPxd5t4%3D&skoid=2120a6cf-0908-44bd-9d70-1a9fd4eb26e8&sktid=a1ab4d21-4797-4645-90e8-98fbc87b1b92&skt=2022-11-06T20%3A05%3A02Z&ske=2022-11-08T04%3A15%3A02Z&sks=b&skv=2019-07-07&st=2022-11-06T21%3A21%3A57Z&se=2022-11-07T05%3A31%3A57Z&sp=r\"}, \"log_groups\": [[\"azureml-logs/hyperdrive.txt\"]], \"run_duration\": \"0:08:02\", \"run_number\": \"1667767260\", \"run_queued_details\": {\"status\": \"Completed\", \"details\": null}, \"hyper_parameters\": {\"--n_estimators\": [\"choice\", [[100, 200, 300]]], \"--max_depth\": [\"choice\", [[5, 10, 15]]], \"--max_features\": [\"choice\", [[\"sqrt\", \"log2\"]]]}}, \"child_runs\": [{\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_0\", \"run_number\": 1667767261, \"metric\": 20.50305136, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:41:07.084187Z\", \"end_time\": \"2022-11-06T20:41:25.014771Z\", \"created_time\": \"2022-11-06T20:41:01.91374Z\", \"created_time_dt\": \"2022-11-06T20:41:01.91374Z\", \"duration\": \"0:00:23\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 5, \"param_--max_features\": \"log2\", \"param_--n_estimators\": 300, \"best_metric\": 20.50305136}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_4\", \"run_number\": 1667767291, \"metric\": 20.38901866, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:42:35.42882Z\", \"end_time\": \"2022-11-06T20:42:53.258724Z\", \"created_time\": \"2022-11-06T20:41:31.974266Z\", \"created_time_dt\": \"2022-11-06T20:41:31.974266Z\", \"duration\": \"0:01:21\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 10, \"param_--max_features\": \"sqrt\", \"param_--n_estimators\": 300, \"best_metric\": 20.50305136}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_5\", \"run_number\": 1667767351, \"metric\": 20.36007471, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:43:02.714442Z\", \"end_time\": \"2022-11-06T20:43:20.540511Z\", \"created_time\": \"2022-11-06T20:42:31.80443Z\", \"created_time_dt\": \"2022-11-06T20:42:31.80443Z\", \"duration\": \"0:00:48\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 10, \"param_--max_features\": \"sqrt\", \"param_--n_estimators\": 100, \"best_metric\": 20.50305136}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_6\", \"run_number\": 1667767381, \"metric\": 20.2419771, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:43:26.806924Z\", \"end_time\": \"2022-11-06T20:43:44.482041Z\", \"created_time\": \"2022-11-06T20:43:01.605924Z\", \"created_time_dt\": \"2022-11-06T20:43:01.605924Z\", \"duration\": \"0:00:42\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 15, \"param_--max_features\": \"sqrt\", \"param_--n_estimators\": 200, \"best_metric\": 20.50305136}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_8\", \"run_number\": 1667767411, \"metric\": 20.53679455, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:44:12.292161Z\", \"end_time\": \"2022-11-06T20:44:31.455915Z\", \"created_time\": \"2022-11-06T20:43:31.747026Z\", \"created_time_dt\": \"2022-11-06T20:43:31.747026Z\", \"duration\": \"0:00:59\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 5, \"param_--max_features\": \"log2\", \"param_--n_estimators\": 100, \"best_metric\": 20.53679455}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_9\", \"run_number\": 1667767442, \"metric\": 20.27962969, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:44:39.459184Z\", \"end_time\": \"2022-11-06T20:44:51.800456Z\", \"created_time\": \"2022-11-06T20:44:02.368742Z\", \"created_time_dt\": \"2022-11-06T20:44:02.368742Z\", \"duration\": \"0:00:49\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 15, \"param_--max_features\": \"sqrt\", \"param_--n_estimators\": 100, \"best_metric\": 20.53679455}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_10\", \"run_number\": 1667767471, \"metric\": 20.54285871, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:45:00.799572Z\", \"end_time\": \"2022-11-06T20:45:14.004453Z\", \"created_time\": \"2022-11-06T20:44:31.542139Z\", \"created_time_dt\": \"2022-11-06T20:44:31.542139Z\", \"duration\": \"0:00:42\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 5, \"param_--max_features\": \"log2\", \"param_--n_estimators\": 200, \"best_metric\": 20.54285871}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_12\", \"run_number\": 1667767501, \"metric\": 20.21752715, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:45:40.257693Z\", \"end_time\": \"2022-11-06T20:45:58.414494Z\", \"created_time\": \"2022-11-06T20:45:01.633943Z\", \"created_time_dt\": \"2022-11-06T20:45:01.633943Z\", \"duration\": \"0:00:56\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 15, \"param_--max_features\": \"sqrt\", \"param_--n_estimators\": 300, \"best_metric\": 20.54285871}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_13\", \"run_number\": 1667767531, \"metric\": 20.41663206, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:46:04.472891Z\", \"end_time\": \"2022-11-06T20:46:22.569683Z\", \"created_time\": \"2022-11-06T20:45:31.605188Z\", \"created_time_dt\": \"2022-11-06T20:45:31.605188Z\", \"duration\": \"0:00:50\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 15, \"param_--max_features\": \"log2\", \"param_--n_estimators\": 100, \"best_metric\": 20.54285871}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_14\", \"run_number\": 1667767561, \"metric\": 20.47590469, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:46:28.782207Z\", \"end_time\": \"2022-11-06T20:46:46.554767Z\", \"created_time\": \"2022-11-06T20:46:01.698108Z\", \"created_time_dt\": \"2022-11-06T20:46:01.698108Z\", \"duration\": \"0:00:44\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 10, \"param_--max_features\": \"log2\", \"param_--n_estimators\": 200, \"best_metric\": 20.54285871}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_16\", \"run_number\": 1667767591, \"metric\": 20.4530111, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:47:38.558588Z\", \"end_time\": \"2022-11-06T20:47:56.080986Z\", \"created_time\": \"2022-11-06T20:46:31.71398Z\", \"created_time_dt\": \"2022-11-06T20:46:31.71398Z\", \"duration\": \"0:01:24\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 5, \"param_--max_features\": \"sqrt\", \"param_--n_estimators\": 100, \"best_metric\": 20.54285871}, {\"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_17\", \"run_number\": 1667767621, \"metric\": 20.45171258, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": null, \"start_time\": \"2022-11-06T20:47:17.397804Z\", \"end_time\": \"2022-11-06T20:47:29.954294Z\", \"created_time\": \"2022-11-06T20:47:01.726871Z\", \"created_time_dt\": \"2022-11-06T20:47:01.726871Z\", \"duration\": \"0:00:28\", \"hyperdrive_id\": \"1373d39b-515c-43d5-8e1d-c84355492d37\", \"arguments\": null, \"param_--max_depth\": 10, \"param_--max_features\": \"log2\", \"param_--n_estimators\": 100, \"best_metric\": 20.54285871}], \"children_metrics\": {\"categories\": [0], \"series\": {\"Number of Estimators:\": [{\"categories\": [1667767261, 1667767291, 1667767351, 1667767381, 1667767411, 1667767442, 1667767471, 1667767501, 1667767531, 1667767561, 1667767591, 1667767621], \"mode\": \"markers\", \"name\": \"Number of Estimators:\", \"stepped\": false, \"type\": \"scatter\", \"data\": [300, 300, 100, 200, 100, 100, 200, 300, 100, 200, 100, 100]}, {\"categories\": [1667767261, 1667767291, 1667767351, 1667767381, 1667767411, 1667767442, 1667767471, 1667767501, 1667767531, 1667767561, 1667767591, 1667767621], \"mode\": \"lines\", \"name\": \"Number of Estimators:_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300]}], \"Max Depth:\": [{\"categories\": [1667767261, 1667767291, 1667767351, 1667767381, 1667767411, 1667767442, 1667767471, 1667767501, 1667767531, 1667767561, 1667767591, 1667767621], \"mode\": \"markers\", \"name\": \"Max Depth:\", \"stepped\": false, \"type\": \"scatter\", \"data\": [5, 10, 10, 15, 5, 15, 5, 15, 15, 10, 5, 10]}, {\"categories\": [1667767261, 1667767291, 1667767351, 1667767381, 1667767411, 1667767442, 1667767471, 1667767501, 1667767531, 1667767561, 1667767591, 1667767621], \"mode\": \"lines\", \"name\": \"Max Depth:_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [5, 10, 10, 15, 15, 15, 15, 15, 15, 15, 15, 15]}], \"Max Features: \": [{\"categories\": [1667767261, 1667767291, 1667767351, 1667767381, 1667767411, 1667767442, 1667767471, 1667767501, 1667767531, 1667767561, 1667767591, 1667767621], \"mode\": \"markers\", \"name\": \"Max Features: \", \"stepped\": false, \"type\": \"scatter\", \"data\": [\"log2\", \"sqrt\", \"sqrt\", \"sqrt\", \"log2\", \"sqrt\", \"log2\", \"sqrt\", \"log2\", \"log2\", \"sqrt\", \"log2\"]}, {\"categories\": [1667767261, 1667767291, 1667767351, 1667767381, 1667767411, 1667767442, 1667767471, 1667767501, 1667767531, 1667767561, 1667767591, 1667767621], \"mode\": \"lines\", \"name\": \"Max Features: _max\", \"stepped\": true, \"type\": \"scatter\", \"data\": []}], \"MSE\": [{\"categories\": [1667767261, 1667767291, 1667767351, 1667767381, 1667767411, 1667767442, 1667767471, 1667767501, 1667767531, 1667767561, 1667767591, 1667767621], \"mode\": \"markers\", \"name\": \"MSE\", \"stepped\": false, \"type\": \"scatter\", \"data\": [420.3751150165444, 415.71208179323247, 414.5326422386092, 409.73763686744985, 421.75993023518265, 411.2633805614858, 422.0090437811327, 408.748403891965, 416.8388648264703, 419.26267304885306, 418.32566293132567, 418.27254741474445]}, {\"categories\": [1667767261, 1667767291, 1667767351, 1667767381, 1667767411, 1667767442, 1667767471, 1667767501, 1667767531, 1667767561, 1667767591, 1667767621], \"mode\": \"lines\", \"name\": \"MSE_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [420.3751150165444, 420.3751150165444, 420.3751150165444, 420.3751150165444, 421.75993023518265, 421.75993023518265, 422.0090437811327, 422.0090437811327, 422.0090437811327, 422.0090437811327, 422.0090437811327, 422.0090437811327]}], \"RMSE\": [{\"categories\": [1667767261, 1667767291, 1667767351, 1667767381, 1667767411, 1667767442, 1667767471, 1667767501, 1667767531, 1667767561, 1667767591, 1667767621], \"mode\": \"markers\", \"name\": \"RMSE\", \"stepped\": false, \"type\": \"scatter\", \"data\": [20.50305135867694, 20.38901865694454, 20.360074711027195, 20.241977098777923, 20.536794546257276, 20.27962969488067, 20.54285870518348, 20.21752714581991, 20.41663206374818, 20.475904694270607, 20.453011096934496, 20.451712579017546]}, {\"categories\": [1667767261, 1667767291, 1667767351, 1667767381, 1667767411, 1667767442, 1667767471, 1667767501, 1667767531, 1667767561, 1667767591, 1667767621], \"mode\": \"lines\", \"name\": \"RMSE_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [20.50305135867694, 20.50305135867694, 20.50305135867694, 20.50305135867694, 20.536794546257276, 20.536794546257276, 20.54285870518348, 20.54285870518348, 20.54285870518348, 20.54285870518348, 20.54285870518348, 20.54285870518348]}]}, \"metricName\": null, \"primaryMetricName\": \"RMSE\", \"showLegend\": false}, \"run_metrics\": [{\"name\": \"best_child_by_primary_metric\", \"run_id\": \"HD_1373d39b-515c-43d5-8e1d-c84355492d37\", \"categories\": [0], \"series\": [{\"data\": [{\"time_elapse\": [61, 271, 301, 481], \"metric_value\": [20.50305135867694, 20.536794546257276, 20.54285870518348, 20.54285870518348], \"metric_name\": [\"RMSE\", \"RMSE\", \"RMSE\", \"RMSE\"], \"run_id\": [\"HD_1373d39b-515c-43d5-8e1d-c84355492d37_0\", \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_8\", \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_10\", \"HD_1373d39b-515c-43d5-8e1d-c84355492d37_10\"], \"final\": [false, false, false, true]}]}]}], \"run_logs\": \"[2022-11-06T20:41:00.867193][GENERATOR][INFO]Trying to sample '4' jobs from the hyperparameter space\\n[2022-11-06T20:41:01.5781994Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_0' \\n[2022-11-06T20:41:01.6861095Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_1' \\n[2022-11-06T20:41:01.8017542Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_2' \\n[2022-11-06T20:41:01.8788922Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_3' \\n[2022-11-06T20:41:01.812070][GENERATOR][INFO]Successfully sampled '4' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:41:01.9634848Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_2' \\n[2022-11-06T20:41:01.9748553Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_0' \\n[2022-11-06T20:41:01.9978663Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_1' \\n[2022-11-06T20:41:02.0299277Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_3' \\n[2022-11-06T20:41:31.538180][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\\n[2022-11-06T20:41:31.776397][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:41:31.8520320Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_4' \\n[2022-11-06T20:41:32.0426081Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_4' \\n[2022-11-06T20:42:31.242898][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\\n[2022-11-06T20:42:31.503418][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:42:31.5576895Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_5' \\n[2022-11-06T20:42:31.8664463Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_5' \\n[2022-11-06T20:43:01.225065][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\\n[2022-11-06T20:43:01.4815901Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_6' \\n[2022-11-06T20:43:01.555104][GENERATOR][INFO]Successfully sampled '2' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:43:01.6060157Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_7' \\n[2022-11-06T20:43:01.6642162Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_6' \\n[2022-11-06T20:43:01.8245509Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_7' \\n[2022-11-06T20:43:31.210871][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\\n[2022-11-06T20:43:31.5672236Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_8' \\n[2022-11-06T20:43:31.528297][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:43:31.8035043Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_8' \\n[2022-11-06T20:44:01.961662][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\\n[2022-11-06T20:44:02.148013][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:44:02.2330889Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_9' \\n[2022-11-06T20:44:02.4430929Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_9' \\n[2022-11-06T20:44:31.176923][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\\n[2022-11-06T20:44:31.4214514Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_10' \\n[2022-11-06T20:44:31.442113][GENERATOR][INFO]Successfully sampled '2' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:44:31.4860858Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_11' \\n[2022-11-06T20:44:31.6001156Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_10' \\n[2022-11-06T20:44:32.1289801Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_11' \\n[2022-11-06T20:45:01.163647][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\\n[2022-11-06T20:45:01.4612197Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_12' \\n[2022-11-06T20:45:01.417546][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:45:01.7021719Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_12' \\n[2022-11-06T20:45:31.168487][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\\n[2022-11-06T20:45:31.5106634Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_13' \\n[2022-11-06T20:45:31.482806][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:45:31.6639951Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_13' \\n[2022-11-06T20:46:01.170875][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\\n[2022-11-06T20:46:01.5293606Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_14' \\n[2022-11-06T20:46:01.609034][GENERATOR][INFO]Successfully sampled '2' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:46:01.6567214Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_15' \\n[2022-11-06T20:46:01.7564274Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_14' \\n[2022-11-06T20:46:01.8196058Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_15' \\n[2022-11-06T20:46:31.263276][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\\n[2022-11-06T20:46:31.484909][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:46:31.5284096Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_16' \\n[2022-11-06T20:46:31.7697764Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_16' \\n[2022-11-06T20:47:01.202637][GENERATOR][INFO]Trying to sample '1' jobs from the hyperparameter space\\n[2022-11-06T20:47:01.5188507Z][SCHEDULER][INFO]Scheduling job, id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_17' \\n[2022-11-06T20:47:01.487696][GENERATOR][INFO]Successfully sampled '1' jobs, they will soon be submitted to the execution target.\\n[2022-11-06T20:47:01.8021964Z][SCHEDULER][INFO]Successfully scheduled a job. Id='HD_1373d39b-515c-43d5-8e1d-c84355492d37_17' \\n[2022-11-06T20:47:31.184499][GENERATOR][INFO]Trying to sample '2' jobs from the hyperparameter space\\n[2022-11-06T20:47:31.205492][GENERATOR][WARNING]Could not sample any more jobs from the space.\\n[2022-11-06T20:49:03.285083][CONTROLLER][INFO]Experiment was 'ExperimentStatus.RUNNING', is 'ExperimentStatus.FINISHED'.\\n\\nRun is completed.\", \"graph\": {}, \"widget_settings\": {\"childWidgetDisplay\": \"popup\", \"send_telemetry\": false, \"log_level\": \"INFO\", \"sdk_version\": \"1.44.0\"}, \"loading\": false}"
          },
          "metadata": {}
        },
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "'log_files'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:756\u001b[0m, in \u001b[0;36mWidget._handle_msg\u001b[0;34m(self, msg)\u001b[0m\n\u001b[1;32m    754\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffer_paths\u001b[39m\u001b[38;5;124m'\u001b[39m \u001b[38;5;129;01min\u001b[39;00m data:\n\u001b[1;32m    755\u001b[0m             _put_buffers(state, data[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffer_paths\u001b[39m\u001b[38;5;124m'\u001b[39m], msg[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbuffers\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m--> 756\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mset_state\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstate\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    758\u001b[0m \u001b[38;5;66;03m# Handle a state request.\u001b[39;00m\n\u001b[1;32m    759\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m method \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrequest_state\u001b[39m\u001b[38;5;124m'\u001b[39m:\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:625\u001b[0m, in \u001b[0;36mWidget.set_state\u001b[0;34m(self, sync_data)\u001b[0m\n\u001b[1;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mkeys:\n\u001b[1;32m    623\u001b[0m     from_json \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtrait_metadata(name, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfrom_json\u001b[39m\u001b[38;5;124m'\u001b[39m,\n\u001b[1;32m    624\u001b[0m                                     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_trait_from_json)\n\u001b[0;32m--> 625\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mset_trait(name, from_json(sync_data[name], \u001b[38;5;28mself\u001b[39m))\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/contextlib.py:120\u001b[0m, in \u001b[0;36m_GeneratorContextManager.__exit__\u001b[0;34m(self, type, value, traceback)\u001b[0m\n\u001b[1;32m    118\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mtype\u001b[39m \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m    119\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 120\u001b[0m         \u001b[38;5;28;43mnext\u001b[39;49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgen\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    121\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mStopIteration\u001b[39;00m:\n\u001b[1;32m    122\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mFalse\u001b[39;00m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1371\u001b[0m, in \u001b[0;36mHasTraits.hold_trait_notifications\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1369\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m changes \u001b[38;5;129;01min\u001b[39;00m cache\u001b[38;5;241m.\u001b[39mvalues():\n\u001b[1;32m   1370\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m change \u001b[38;5;129;01min\u001b[39;00m changes:\n\u001b[0;32m-> 1371\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnotify_change\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/ipywidgets/widgets/widget.py:686\u001b[0m, in \u001b[0;36mWidget.notify_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m    683\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m name \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mkeys \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_should_send_property(name, \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, name)):\n\u001b[1;32m    684\u001b[0m         \u001b[38;5;66;03m# Send new state to front-end\u001b[39;00m\n\u001b[1;32m    685\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msend_state(key\u001b[38;5;241m=\u001b[39mname)\n\u001b[0;32m--> 686\u001b[0m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mWidget\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnotify_change\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1386\u001b[0m, in \u001b[0;36mHasTraits.notify_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m   1384\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mnotify_change\u001b[39m(\u001b[38;5;28mself\u001b[39m, change):\n\u001b[1;32m   1385\u001b[0m     \u001b[38;5;124;03m\"\"\"Notify observers of a change event\"\"\"\u001b[39;00m\n\u001b[0;32m-> 1386\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_notify_observers\u001b[49m\u001b[43m(\u001b[49m\u001b[43mchange\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/traitlets/traitlets.py:1431\u001b[0m, in \u001b[0;36mHasTraits._notify_observers\u001b[0;34m(self, event)\u001b[0m\n\u001b[1;32m   1428\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(c, EventHandler) \u001b[38;5;129;01mand\u001b[39;00m c\u001b[38;5;241m.\u001b[39mname \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   1429\u001b[0m     c \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, c\u001b[38;5;241m.\u001b[39mname)\n\u001b[0;32m-> 1431\u001b[0m \u001b[43mc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mevent\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/azureml_py38/lib/python3.8/site-packages/azureml/widgets/_userrun/_run_details.py:627\u001b[0m, in \u001b[0;36m_UserRunDetails._on_selected_run_log_change\u001b[0;34m(self, change)\u001b[0m\n\u001b[1;32m    625\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_on_selected_run_log_change\u001b[39m(\u001b[38;5;28mself\u001b[39m, change):\n\u001b[1;32m    626\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mselected_run_log \u001b[38;5;241m=\u001b[39m change\u001b[38;5;241m.\u001b[39mnew\n\u001b[0;32m--> 627\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_get_run_logs_async(\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mwidget_instance\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrun_properties\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mlog_files\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m,\n\u001b[1;32m    628\u001b[0m                              \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mwidget_instance\u001b[38;5;241m.\u001b[39mrun_properties[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstatus\u001b[39m\u001b[38;5;124m'\u001b[39m],\n\u001b[1;32m    629\u001b[0m                              \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39merror, change\u001b[38;5;241m.\u001b[39mnew)\n",
            "\u001b[0;31mKeyError\u001b[0m: 'log_files'"
          ]
        }
      ],
      "execution_count": 80,
      "metadata": {
        "gather": {
          "logged": 1667770224517
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Best Model\n",
        "\n",
        "TODO: In the cell below, get the best model from the hyperdrive experiments and display all the properties of the model."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [
        "import joblib\n",
        "# Get your best run and save the model from that run.\n",
        "\n",
        "best_run = hyperdrive_run.get_best_run_by_primary_metric()\n",
        "print(best_run)\n",
        "print(f'Best Metric: {best_run.get_metrics(name=\"RMSE\")}')\n",
        "parameter_values = best_run.get_details()['runDefinition']['arguments']\n",
        "print(f\"Parameter Values: {parameter_values}\")\n",
        "\n",
        "print('Best Run Id: ', best_run.id)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "Run(Experiment: udacity-capstone-hyperdrive,\nId: HD_1373d39b-515c-43d5-8e1d-c84355492d37_10,\nType: azureml.scriptrun,\nStatus: Completed)\nBest Metric: {'RMSE': 20.54285870518348}\nParameter Values: ['--max_depth', '5', '--max_features', 'log2', '--n_estimators', '200']\nBest Run Id:  HD_1373d39b-515c-43d5-8e1d-c84355492d37_10\n"
        }
      ],
      "execution_count": 71,
      "metadata": {
        "gather": {
          "logged": 1667768586131
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "best_run.download"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#TODO: Save the best model\n",
        "model_properties = {\"model\":\"sklearn RF regressor\",\n",
        "             \"hyperparameters\":str(parameter_values),\n",
        "             \"rmse\":str(best_run.get_metrics(name=\"RMSE\"))}\n",
        "\n",
        "best_model = best_run.register_model(model_name='spotify-popularity-model-hyperdrive', model_path = 'outputs/model.pkl',properties=model_properties)"
      ],
      "outputs": [],
      "execution_count": 79,
      "metadata": {
        "gather": {
          "logged": 1667769510040
        },
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Model Deployment\n",
        "\n",
        "Remember you have to deploy only one of the two models you trained but you still need to register both the models. Perform the steps in the rest of this notebook only if you wish to deploy this model.\n",
        "\n",
        "TODO: In the cell below, register the model, create an inference config and deploy the model as a web service."
      ],
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "outputs_hidden": false,
          "source_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# see model registry above ^"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "TODO: In the cell below, send a request to the web service you deployed to test it."
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "TODO: In the cell below, print the logs of the web service and delete the service"
      ],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Submission Checklist**\n",
        "- I have registered the model.\n",
        "- I have deployed the model with the best accuracy as a webservice.\n",
        "- I have tested the webservice by sending a request to the model endpoint.\n",
        "- I have deleted the webservice and shutdown all the computes that I have used.\n",
        "- I have taken a screenshot showing the model endpoint as active.\n",
        "- The project includes a file containing the environment details.\n",
        "\n"
      ],
      "metadata": {}
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {}
    }
  ],
  "metadata": {
    "kernel_info": {
      "name": "python3"
    },
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)"
    },
    "language_info": {
      "name": "python",
      "version": "3.8.5",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    },
    "microsoft": {
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}